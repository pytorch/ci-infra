name: TFLint & Plan - ARC 

on:
  pull_request:
    paths:
      - '.github/workflows/arc-*'
      - 'arc/**'
      - 'modules/**'
      - 'scripts/**'
  push:
    branches:
      - main

permissions:
  id-token: write
  contents: read

jobs:
  tflint-plan:
    name: ARC tflint + terraform plan
    runs-on: ubuntu-latest

    steps:
    - name: Checkout branch
      uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

    - name: Install Terraform
      uses: hashicorp/setup-terraform@633666f66e0061ca3b725c73b2ec20cd13a8fdd1 # v2.0.3
      with:
        terraform_version: 1.5.7
        terraform_wrapper: false

    - uses: terraform-linters/setup-tflint@444635365d380c7363d1eaee4267317c2445717d # v2.0.1
      name: Setup TFLint
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}

    - name: Install virtualenv
      run: pip install virtualenv

    - name: Install AWS CLI
      uses: unfor19/install-aws-cli-action@e8b481e524a99f37fbd39fdc1dcb3341ab091367 # v1.0.7
      with:
        arch: amd64

    - name: Install Kubectl
      uses: azure/setup-kubectl@v1
      with:
        version: latest

    - name: Install Helm
      uses: azure/setup-helm@v3
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        version: latest

    - name: configure aws credentials
      uses: aws-actions/configure-aws-credentials@b47578312673ae6fa5b5096b330d9fbac3d116df # v4.2.1
      with:
        role-to-assume: arn:aws:iam::${{ secrets.PY_FOUNDATION_AWS_ACC_ID }}:role/${{ secrets.PY_FOUNDATION_AWS_DEPLOY_ROLE }}
        aws-region: us-east-1

    - name: "Run TFLint runners"
      shell: bash
      working-directory: arc
      run: make tflint
      env:
        EKS_USERS: ${{ secrets.EKS_USERS }}

    - name: Make plan
      shell: bash
      working-directory: arc
      run: make plan
      env:
        DOCKER_REGISTRY_HTPASSWD: ${{ secrets.DOCKER_REGISTRY_HTPASSWD }}
        DOCKER_REGISTRY_PASSWORDS: ${{ secrets.DOCKER_REGISTRY_PASSWORDS }}
        EKS_USERS: ${{ secrets.EKS_USERS }}
        GHA_PRIVATE_KEY_CANARY: ${{ secrets.GHA_PRIVATE_KEY_CANARY }}
        GHA_PRIVATE_KEY: ${{ secrets.GHA_PRIVATE_KEY }}
        GITHUB_TOKEN: ${{ secrets.LIST_PYTORCH_RUNNERS_GITHUB_TOKEN }}
        KUBECONFIG: ${{ runner.temp }}/kubeconfig
        NO_EKSCTL: 'true'
        PUSH_PACKAGE_DOCKER_GITHUB_TOKEN: ${{ secrets.PUSH_PACKAGE_DOCKER_GITHUB_TOKEN }}
        TERRAFORM_EXTRAS: -lock-timeout=15m
